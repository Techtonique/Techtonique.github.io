// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// l2_norm
double l2_norm(NumericVector x);
RcppExport SEXP _bayesianrvfl_l2_norm(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(l2_norm(x));
    return rcpp_result_gen;
END_RCPP
}
// matern52_kxx_cpp
NumericMatrix matern52_kxx_cpp(NumericMatrix x, double sigma, double l);
RcppExport SEXP _bayesianrvfl_matern52_kxx_cpp(SEXP xSEXP, SEXP sigmaSEXP, SEXP lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type l(lSEXP);
    rcpp_result_gen = Rcpp::wrap(matern52_kxx_cpp(x, sigma, l));
    return rcpp_result_gen;
END_RCPP
}
// matern52_kxy_cpp
NumericVector matern52_kxy_cpp(NumericMatrix x, NumericVector y, double sigma, double l);
RcppExport SEXP _bayesianrvfl_matern52_kxy_cpp(SEXP xSEXP, SEXP ySEXP, SEXP sigmaSEXP, SEXP lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type l(lSEXP);
    rcpp_result_gen = Rcpp::wrap(matern52_kxy_cpp(x, y, sigma, l));
    return rcpp_result_gen;
END_RCPP
}
// cbind_cpp
NumericMatrix cbind_cpp(NumericMatrix x, NumericMatrix y);
RcppExport SEXP _bayesianrvfl_cbind_cpp(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(cbind_cpp(x, y));
    return rcpp_result_gen;
END_RCPP
}
// l2_dist
double l2_dist(NumericVector x, NumericVector y);
RcppExport SEXP _bayesianrvfl_l2_dist(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(l2_dist(x, y));
    return rcpp_result_gen;
END_RCPP
}
// l2_distmat
NumericVector l2_distmat(NumericVector y, NumericMatrix x);
RcppExport SEXP _bayesianrvfl_l2_distmat(SEXP ySEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(l2_distmat(y, x));
    return rcpp_result_gen;
END_RCPP
}
// one_hot_encode_cpp
NumericMatrix one_hot_encode_cpp(NumericVector x_clusters, unsigned long int n_clusters);
RcppExport SEXP _bayesianrvfl_one_hot_encode_cpp(SEXP x_clustersSEXP, SEXP n_clustersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x_clusters(x_clustersSEXP);
    Rcpp::traits::input_parameter< unsigned long int >::type n_clusters(n_clustersSEXP);
    rcpp_result_gen = Rcpp::wrap(one_hot_encode_cpp(x_clusters, n_clusters));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_bayesianrvfl_l2_norm", (DL_FUNC) &_bayesianrvfl_l2_norm, 1},
    {"_bayesianrvfl_matern52_kxx_cpp", (DL_FUNC) &_bayesianrvfl_matern52_kxx_cpp, 3},
    {"_bayesianrvfl_matern52_kxy_cpp", (DL_FUNC) &_bayesianrvfl_matern52_kxy_cpp, 4},
    {"_bayesianrvfl_cbind_cpp", (DL_FUNC) &_bayesianrvfl_cbind_cpp, 2},
    {"_bayesianrvfl_l2_dist", (DL_FUNC) &_bayesianrvfl_l2_dist, 2},
    {"_bayesianrvfl_l2_distmat", (DL_FUNC) &_bayesianrvfl_l2_distmat, 2},
    {"_bayesianrvfl_one_hot_encode_cpp", (DL_FUNC) &_bayesianrvfl_one_hot_encode_cpp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_bayesianrvfl(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
