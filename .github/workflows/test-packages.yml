name: Test R packages installation

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build R packages repository"]
    types:
      - completed

jobs:
  test-installation:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: win.binary
          - os: macos-latest
            platform: mac.binary
          - os: ubuntu-latest
            platform: source
            
    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'

      - name: Test package installation and usage
        shell: Rscript {0}
        run: |
          # Add our repository to the list
          repos <- c(
            techtonique = "https://techtonique.github.io/r-packages",
            CRAN = "https://cloud.r-project.org"
          )
          options(repos = repos)
          
          # Function to test a package
          test_package <- function(pkg_name) {
            message("\nTesting package: ", pkg_name)
            result <- try({
              install.packages(pkg_name)
              library(pkg_name, character.only = TRUE)
              message(pkg_name, " test successful")
              TRUE
            }, silent = FALSE)
            
            return(!inherits(result, "try-error"))
          }
          
          # Test each package independently
          packages <- c("crossvalidation", "esgtoolkit", "misc", "vars")
          results <- sapply(packages, test_package)
          
          # Report results
          message("\nTest Summary:")
          message("Successful: ", sum(results))
          message("Failed: ", sum(!results))
          
          # List failed packages if any
          if (any(!results)) {
            message("\nFailed packages:")
            message(paste(packages[!results], collapse = ", "))
            quit(status = 1)
          } else {
            message("\nAll package tests completed successfully!")
          } 