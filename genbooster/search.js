window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"genbooster": {"fullname": "genbooster", "modulename": "genbooster", "kind": "module", "doc": "<p></p>\n"}, "genbooster.BoosterRegressor": {"fullname": "genbooster.BoosterRegressor", "modulename": "genbooster", "qualname": "BoosterRegressor", "kind": "class", "doc": "<p>Generic Gradient Boosting Regressor (for any base learner).</p>\n\n<p>Parameters:</p>\n\n<pre><code>base_estimator: Base learner to use for the booster.\n\nn_estimators: Number of boosting stages to perform.\n\nlearning_rate: Learning rate shrinks the contribution of each estimator.\n\nn_hidden_features: Number of hidden features to use for the base learner.\n\ndirect_link: Whether to use direct link for the base learner or not.\n\nweights_distribution: Distribution of the weights for the booster (uniform or normal).\n\ndropout: Dropout rate.\n\nrandom_state: Random state.\n</code></pre>\n\n<p>Attributes:</p>\n\n<pre><code>base_estimator_: The base learner.\n\nbooster_: The boosting model.\n\ny_mean_: Mean of the target variable.\n</code></pre>\n\n<p>Examples:</p>\n\n<pre><code>See https://github.com/Techtonique/genbooster/tree/main/examples\n</code></pre>\n", "bases": "sklearn.base.BaseEstimator, sklearn.base.RegressorMixin"}, "genbooster.BoosterRegressor.__init__": {"fullname": "genbooster.BoosterRegressor.__init__", "modulename": "genbooster", "qualname": "BoosterRegressor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">sklearn</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">BaseEstimator</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">n_hidden_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">direct_link</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">weights_distribution</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;uniform&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dropout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">42</span></span>)</span>"}, "genbooster.BoosterRegressor.base_estimator": {"fullname": "genbooster.BoosterRegressor.base_estimator", "modulename": "genbooster", "qualname": "BoosterRegressor.base_estimator", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterRegressor.n_estimators": {"fullname": "genbooster.BoosterRegressor.n_estimators", "modulename": "genbooster", "qualname": "BoosterRegressor.n_estimators", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterRegressor.learning_rate": {"fullname": "genbooster.BoosterRegressor.learning_rate", "modulename": "genbooster", "qualname": "BoosterRegressor.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterRegressor.n_hidden_features": {"fullname": "genbooster.BoosterRegressor.n_hidden_features", "modulename": "genbooster", "qualname": "BoosterRegressor.n_hidden_features", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterRegressor.direct_link": {"fullname": "genbooster.BoosterRegressor.direct_link", "modulename": "genbooster", "qualname": "BoosterRegressor.direct_link", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterRegressor.weights_distribution": {"fullname": "genbooster.BoosterRegressor.weights_distribution", "modulename": "genbooster", "qualname": "BoosterRegressor.weights_distribution", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterRegressor.dropout": {"fullname": "genbooster.BoosterRegressor.dropout", "modulename": "genbooster", "qualname": "BoosterRegressor.dropout", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterRegressor.random_state": {"fullname": "genbooster.BoosterRegressor.random_state", "modulename": "genbooster", "qualname": "BoosterRegressor.random_state", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterRegressor.scaler_": {"fullname": "genbooster.BoosterRegressor.scaler_", "modulename": "genbooster", "qualname": "BoosterRegressor.scaler_", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterRegressor.y_mean_": {"fullname": "genbooster.BoosterRegressor.y_mean_", "modulename": "genbooster", "qualname": "BoosterRegressor.y_mean_", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterRegressor.fit": {"fullname": "genbooster.BoosterRegressor.fit", "modulename": "genbooster", "qualname": "BoosterRegressor.fit", "kind": "function", "doc": "<p>Fit the boosting model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n\ny: Target data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>self: The fitted boosting model.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genbooster</span><span class=\"o\">.</span><span class=\"n\">genboosterregressor</span><span class=\"o\">.</span><span class=\"n\">BoosterRegressor</span>:</span></span>", "funcdef": "def"}, "genbooster.BoosterRegressor.predict": {"fullname": "genbooster.BoosterRegressor.predict", "modulename": "genbooster", "qualname": "BoosterRegressor.predict", "kind": "function", "doc": "<p>Make predictions with the boosting model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>preds: Predictions.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "genbooster.BoosterRegressor.set_score_request": {"fullname": "genbooster.BoosterRegressor.set_score_request", "modulename": "genbooster", "qualname": "BoosterRegressor.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    The name of the method for which the request function should be\n    created, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</p>\n\n<p>keys : list of str\n    A list of strings which are accepted parameters by the created\n    function, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\n    accepts it as a metadata.</p>\n\n<p>validate_keys : bool, default=True\n    Whether to check if the requested parameters fit the actual parameters\n    of the method.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h2 id=\"references\">References</h2>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "genbooster.BoosterClassifier": {"fullname": "genbooster.BoosterClassifier", "modulename": "genbooster", "qualname": "BoosterClassifier", "kind": "class", "doc": "<p>Generic Gradient Boosting Classifier (for any base learner).</p>\n\n<p>Parameters:</p>\n\n<pre><code>base_estimator: Base learner to use for the booster.\n\nn_estimators: Number of boosting stages to perform.\n\nlearning_rate: Learning rate shrinks the contribution of each estimator.\n\nn_hidden_features: Number of hidden features to use for the base learner.\n\ndirect_link: Whether to use direct link for the base learner or not.\n\nweights_distribution: Distribution of the weights for the booster (uniform or normal).\n\ndropout: Dropout rate.\n\nrandom_state: Random state.\n</code></pre>\n\n<p>Attributes:</p>\n\n<pre><code>classes_: The classes of the target variable.\n\nn_classes_: The number of classes of the target variable.\n\nboosters_: Base learners.\n</code></pre>\n\n<p>Examples:</p>\n\n<pre><code>See https://github.com/Techtonique/genbooster/tree/main/examples\n</code></pre>\n", "bases": "sklearn.base.BaseEstimator, sklearn.base.ClassifierMixin"}, "genbooster.BoosterClassifier.__init__": {"fullname": "genbooster.BoosterClassifier.__init__", "modulename": "genbooster", "qualname": "BoosterClassifier.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">sklearn</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">BaseEstimator</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">n_hidden_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">direct_link</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">weights_distribution</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;uniform&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dropout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">42</span></span>)</span>"}, "genbooster.BoosterClassifier.n_estimators": {"fullname": "genbooster.BoosterClassifier.n_estimators", "modulename": "genbooster", "qualname": "BoosterClassifier.n_estimators", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterClassifier.learning_rate": {"fullname": "genbooster.BoosterClassifier.learning_rate", "modulename": "genbooster", "qualname": "BoosterClassifier.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterClassifier.n_hidden_features": {"fullname": "genbooster.BoosterClassifier.n_hidden_features", "modulename": "genbooster", "qualname": "BoosterClassifier.n_hidden_features", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterClassifier.direct_link": {"fullname": "genbooster.BoosterClassifier.direct_link", "modulename": "genbooster", "qualname": "BoosterClassifier.direct_link", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterClassifier.weights_distribution": {"fullname": "genbooster.BoosterClassifier.weights_distribution", "modulename": "genbooster", "qualname": "BoosterClassifier.weights_distribution", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterClassifier.dropout": {"fullname": "genbooster.BoosterClassifier.dropout", "modulename": "genbooster", "qualname": "BoosterClassifier.dropout", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterClassifier.random_state": {"fullname": "genbooster.BoosterClassifier.random_state", "modulename": "genbooster", "qualname": "BoosterClassifier.random_state", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterClassifier.boosters_": {"fullname": "genbooster.BoosterClassifier.boosters_", "modulename": "genbooster", "qualname": "BoosterClassifier.boosters_", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.BoosterClassifier.fit": {"fullname": "genbooster.BoosterClassifier.fit", "modulename": "genbooster", "qualname": "BoosterClassifier.fit", "kind": "function", "doc": "<p>Fit the booster model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n\ny: Target data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>self: The fitted boosting model.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genbooster</span><span class=\"o\">.</span><span class=\"n\">genboosterclassifier</span><span class=\"o\">.</span><span class=\"n\">BoosterClassifier</span>:</span></span>", "funcdef": "def"}, "genbooster.BoosterClassifier.predict": {"fullname": "genbooster.BoosterClassifier.predict", "modulename": "genbooster", "qualname": "BoosterClassifier.predict", "kind": "function", "doc": "<p>Make predictions with the boosting model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>preds: Class predictions.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "genbooster.BoosterClassifier.predict_proba": {"fullname": "genbooster.BoosterClassifier.predict_proba", "modulename": "genbooster", "qualname": "BoosterClassifier.predict_proba", "kind": "function", "doc": "<p>Make probability predictions with the boosting model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>preds: Probability predictions.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "genbooster.BoosterClassifier.set_score_request": {"fullname": "genbooster.BoosterClassifier.set_score_request", "modulename": "genbooster", "qualname": "BoosterClassifier.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    The name of the method for which the request function should be\n    created, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</p>\n\n<p>keys : list of str\n    A list of strings which are accepted parameters by the created\n    function, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\n    accepts it as a metadata.</p>\n\n<p>validate_keys : bool, default=True\n    Whether to check if the requested parameters fit the actual parameters\n    of the method.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h2 id=\"references\">References</h2>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "genbooster.RandomBagRegressor": {"fullname": "genbooster.RandomBagRegressor", "modulename": "genbooster", "qualname": "RandomBagRegressor", "kind": "class", "doc": "<p>Generic Random Bagging Regressor (for any base learner).</p>\n\n<p>Parameters:</p>\n\n<pre><code>base_estimator: Base learner to use for the booster.\n\nn_estimators: Number of boosting stages to perform.\n\nlearning_rate: Learning rate shrinks the contribution of each estimator.\n\nn_hidden_features: Number of hidden features to use for the base learner.\n\ndirect_link: Whether to use direct link for the base learner or not.\n\nweights_distribution: Distribution of the weights for the booster (uniform or normal).\n\ndropout: Dropout rate.\n\nrandom_state: Random state.\n</code></pre>\n\n<p>Attributes:</p>\n\n<pre><code>baggers_: The bagging learners.\n\ny_mean_: The mean of the target variable.\n</code></pre>\n\n<p>Examples:</p>\n\n<pre><code>See https://github.com/Techtonique/genbooster/tree/main/examples\n</code></pre>\n", "bases": "sklearn.base.BaseEstimator, sklearn.base.RegressorMixin"}, "genbooster.RandomBagRegressor.__init__": {"fullname": "genbooster.RandomBagRegressor.__init__", "modulename": "genbooster", "qualname": "RandomBagRegressor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">sklearn</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">BaseEstimator</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">n_hidden_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">direct_link</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">weights_distribution</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;uniform&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dropout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">42</span></span>)</span>"}, "genbooster.RandomBagRegressor.base_estimator": {"fullname": "genbooster.RandomBagRegressor.base_estimator", "modulename": "genbooster", "qualname": "RandomBagRegressor.base_estimator", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagRegressor.n_estimators": {"fullname": "genbooster.RandomBagRegressor.n_estimators", "modulename": "genbooster", "qualname": "RandomBagRegressor.n_estimators", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagRegressor.learning_rate": {"fullname": "genbooster.RandomBagRegressor.learning_rate", "modulename": "genbooster", "qualname": "RandomBagRegressor.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagRegressor.n_hidden_features": {"fullname": "genbooster.RandomBagRegressor.n_hidden_features", "modulename": "genbooster", "qualname": "RandomBagRegressor.n_hidden_features", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagRegressor.direct_link": {"fullname": "genbooster.RandomBagRegressor.direct_link", "modulename": "genbooster", "qualname": "RandomBagRegressor.direct_link", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagRegressor.weights_distribution": {"fullname": "genbooster.RandomBagRegressor.weights_distribution", "modulename": "genbooster", "qualname": "RandomBagRegressor.weights_distribution", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagRegressor.dropout": {"fullname": "genbooster.RandomBagRegressor.dropout", "modulename": "genbooster", "qualname": "RandomBagRegressor.dropout", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagRegressor.random_state": {"fullname": "genbooster.RandomBagRegressor.random_state", "modulename": "genbooster", "qualname": "RandomBagRegressor.random_state", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagRegressor.scaler_": {"fullname": "genbooster.RandomBagRegressor.scaler_", "modulename": "genbooster", "qualname": "RandomBagRegressor.scaler_", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagRegressor.y_mean_": {"fullname": "genbooster.RandomBagRegressor.y_mean_", "modulename": "genbooster", "qualname": "RandomBagRegressor.y_mean_", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagRegressor.fit": {"fullname": "genbooster.RandomBagRegressor.fit", "modulename": "genbooster", "qualname": "RandomBagRegressor.fit", "kind": "function", "doc": "<p>Fit the bagging model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n\ny: Target data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>self: The fitted booster model.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genbooster</span><span class=\"o\">.</span><span class=\"n\">randombagregressor</span><span class=\"o\">.</span><span class=\"n\">RandomBagRegressor</span>:</span></span>", "funcdef": "def"}, "genbooster.RandomBagRegressor.predict": {"fullname": "genbooster.RandomBagRegressor.predict", "modulename": "genbooster", "qualname": "RandomBagRegressor.predict", "kind": "function", "doc": "<p>Make predictions with the bagging model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>preds: Predictions.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "genbooster.RandomBagRegressor.set_score_request": {"fullname": "genbooster.RandomBagRegressor.set_score_request", "modulename": "genbooster", "qualname": "RandomBagRegressor.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    The name of the method for which the request function should be\n    created, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</p>\n\n<p>keys : list of str\n    A list of strings which are accepted parameters by the created\n    function, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\n    accepts it as a metadata.</p>\n\n<p>validate_keys : bool, default=True\n    Whether to check if the requested parameters fit the actual parameters\n    of the method.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h2 id=\"references\">References</h2>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "genbooster.RandomBagClassifier": {"fullname": "genbooster.RandomBagClassifier", "modulename": "genbooster", "qualname": "RandomBagClassifier", "kind": "class", "doc": "<p>Generic Random Bagging Classifier (for any base learner).</p>\n\n<p>Parameters:</p>\n\n<pre><code>base_estimator: Base learner to use for the booster.\n\nn_estimators: Number of boosting stages to perform.\n\nlearning_rate: Learning rate shrinks the contribution of each estimator.\n\nn_hidden_features: Number of hidden features to use for the base learner.\n\ndirect_link: Whether to use direct link for the base learner or not.\n\nweights_distribution: Distribution of the weights for the booster (uniform or normal).\n\ndropout: Dropout rate.\n\nrandom_state: Random state.\n</code></pre>\n\n<p>Attributes:</p>\n\n<pre><code>baggers_: The bagging learners.\n\nclasses_: The classes of the target variable.\n\nn_classes_: The number of classes of the target variable.\n</code></pre>\n\n<p>Examples:</p>\n\n<pre><code>See https://github.com/Techtonique/genbooster/tree/main/examples\n</code></pre>\n", "bases": "sklearn.base.BaseEstimator, sklearn.base.ClassifierMixin"}, "genbooster.RandomBagClassifier.__init__": {"fullname": "genbooster.RandomBagClassifier.__init__", "modulename": "genbooster", "qualname": "RandomBagClassifier.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">sklearn</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">BaseEstimator</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">n_hidden_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">direct_link</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">weights_distribution</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;uniform&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dropout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">42</span></span>)</span>"}, "genbooster.RandomBagClassifier.n_estimators": {"fullname": "genbooster.RandomBagClassifier.n_estimators", "modulename": "genbooster", "qualname": "RandomBagClassifier.n_estimators", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagClassifier.learning_rate": {"fullname": "genbooster.RandomBagClassifier.learning_rate", "modulename": "genbooster", "qualname": "RandomBagClassifier.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagClassifier.n_hidden_features": {"fullname": "genbooster.RandomBagClassifier.n_hidden_features", "modulename": "genbooster", "qualname": "RandomBagClassifier.n_hidden_features", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagClassifier.direct_link": {"fullname": "genbooster.RandomBagClassifier.direct_link", "modulename": "genbooster", "qualname": "RandomBagClassifier.direct_link", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagClassifier.weights_distribution": {"fullname": "genbooster.RandomBagClassifier.weights_distribution", "modulename": "genbooster", "qualname": "RandomBagClassifier.weights_distribution", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagClassifier.dropout": {"fullname": "genbooster.RandomBagClassifier.dropout", "modulename": "genbooster", "qualname": "RandomBagClassifier.dropout", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagClassifier.random_state": {"fullname": "genbooster.RandomBagClassifier.random_state", "modulename": "genbooster", "qualname": "RandomBagClassifier.random_state", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagClassifier.y_mean_": {"fullname": "genbooster.RandomBagClassifier.y_mean_", "modulename": "genbooster", "qualname": "RandomBagClassifier.y_mean_", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagClassifier.boosters_": {"fullname": "genbooster.RandomBagClassifier.boosters_", "modulename": "genbooster", "qualname": "RandomBagClassifier.boosters_", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.RandomBagClassifier.fit": {"fullname": "genbooster.RandomBagClassifier.fit", "modulename": "genbooster", "qualname": "RandomBagClassifier.fit", "kind": "function", "doc": "<p>Fit the bagging model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n\ny: Target data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>self: The fitted bagging model.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genbooster</span><span class=\"o\">.</span><span class=\"n\">randombagclassifier</span><span class=\"o\">.</span><span class=\"n\">RandomBagClassifier</span>:</span></span>", "funcdef": "def"}, "genbooster.RandomBagClassifier.predict": {"fullname": "genbooster.RandomBagClassifier.predict", "modulename": "genbooster", "qualname": "RandomBagClassifier.predict", "kind": "function", "doc": "<p>Make predictions with the bagging model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>preds: Class predictions.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "genbooster.RandomBagClassifier.predict_proba": {"fullname": "genbooster.RandomBagClassifier.predict_proba", "modulename": "genbooster", "qualname": "RandomBagClassifier.predict_proba", "kind": "function", "doc": "<p>Make probability predictions with the booster model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>preds: Probability predictions.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "genbooster.RandomBagClassifier.set_score_request": {"fullname": "genbooster.RandomBagClassifier.set_score_request", "modulename": "genbooster", "qualname": "RandomBagClassifier.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    The name of the method for which the request function should be\n    created, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</p>\n\n<p>keys : list of str\n    A list of strings which are accepted parameters by the created\n    function, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\n    accepts it as a metadata.</p>\n\n<p>validate_keys : bool, default=True\n    Whether to check if the requested parameters fit the actual parameters\n    of the method.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h2 id=\"references\">References</h2>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "genbooster.RustBooster": {"fullname": "genbooster.RustBooster", "modulename": "genbooster", "qualname": "RustBooster", "kind": "class", "doc": "<p></p>\n"}, "genbooster.RustBooster.fit_boosting": {"fullname": "genbooster.RustBooster.fit_boosting", "modulename": "genbooster", "qualname": "RustBooster.fit_boosting", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">dropout</span>, </span><span class=\"param\"><span class=\"n\">seed</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "genbooster.RustBooster.predict_boosting": {"fullname": "genbooster.RustBooster.predict_boosting", "modulename": "genbooster", "qualname": "RustBooster.predict_boosting", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "genbooster.RustBooster.fit_bagging": {"fullname": "genbooster.RustBooster.fit_bagging", "modulename": "genbooster", "qualname": "RustBooster.fit_bagging", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">dropout</span>, </span><span class=\"param\"><span class=\"n\">seed</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "genbooster.RustBooster.predict_bagging": {"fullname": "genbooster.RustBooster.predict_bagging", "modulename": "genbooster", "qualname": "RustBooster.predict_bagging", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">/</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "genbooster.genboosterclassifier": {"fullname": "genbooster.genboosterclassifier", "modulename": "genbooster.genboosterclassifier", "kind": "module", "doc": "<p></p>\n"}, "genbooster.genboosterclassifier.BoosterClassifier": {"fullname": "genbooster.genboosterclassifier.BoosterClassifier", "modulename": "genbooster.genboosterclassifier", "qualname": "BoosterClassifier", "kind": "class", "doc": "<p>Generic Gradient Boosting Classifier (for any base learner).</p>\n\n<p>Parameters:</p>\n\n<pre><code>base_estimator: Base learner to use for the booster.\n\nn_estimators: Number of boosting stages to perform.\n\nlearning_rate: Learning rate shrinks the contribution of each estimator.\n\nn_hidden_features: Number of hidden features to use for the base learner.\n\ndirect_link: Whether to use direct link for the base learner or not.\n\nweights_distribution: Distribution of the weights for the booster (uniform or normal).\n\ndropout: Dropout rate.\n\nrandom_state: Random state.\n</code></pre>\n\n<p>Attributes:</p>\n\n<pre><code>classes_: The classes of the target variable.\n\nn_classes_: The number of classes of the target variable.\n\nboosters_: Base learners.\n</code></pre>\n\n<p>Examples:</p>\n\n<pre><code>See https://github.com/Techtonique/genbooster/tree/main/examples\n</code></pre>\n", "bases": "sklearn.base.BaseEstimator, sklearn.base.ClassifierMixin"}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"fullname": "genbooster.genboosterclassifier.BoosterClassifier.__init__", "modulename": "genbooster.genboosterclassifier", "qualname": "BoosterClassifier.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">sklearn</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">BaseEstimator</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">n_hidden_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">direct_link</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">weights_distribution</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;uniform&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dropout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">42</span></span>)</span>"}, "genbooster.genboosterclassifier.BoosterClassifier.n_estimators": {"fullname": "genbooster.genboosterclassifier.BoosterClassifier.n_estimators", "modulename": "genbooster.genboosterclassifier", "qualname": "BoosterClassifier.n_estimators", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterclassifier.BoosterClassifier.learning_rate": {"fullname": "genbooster.genboosterclassifier.BoosterClassifier.learning_rate", "modulename": "genbooster.genboosterclassifier", "qualname": "BoosterClassifier.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterclassifier.BoosterClassifier.n_hidden_features": {"fullname": "genbooster.genboosterclassifier.BoosterClassifier.n_hidden_features", "modulename": "genbooster.genboosterclassifier", "qualname": "BoosterClassifier.n_hidden_features", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterclassifier.BoosterClassifier.direct_link": {"fullname": "genbooster.genboosterclassifier.BoosterClassifier.direct_link", "modulename": "genbooster.genboosterclassifier", "qualname": "BoosterClassifier.direct_link", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterclassifier.BoosterClassifier.weights_distribution": {"fullname": "genbooster.genboosterclassifier.BoosterClassifier.weights_distribution", "modulename": "genbooster.genboosterclassifier", "qualname": "BoosterClassifier.weights_distribution", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterclassifier.BoosterClassifier.dropout": {"fullname": "genbooster.genboosterclassifier.BoosterClassifier.dropout", "modulename": "genbooster.genboosterclassifier", "qualname": "BoosterClassifier.dropout", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterclassifier.BoosterClassifier.random_state": {"fullname": "genbooster.genboosterclassifier.BoosterClassifier.random_state", "modulename": "genbooster.genboosterclassifier", "qualname": "BoosterClassifier.random_state", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterclassifier.BoosterClassifier.boosters_": {"fullname": "genbooster.genboosterclassifier.BoosterClassifier.boosters_", "modulename": "genbooster.genboosterclassifier", "qualname": "BoosterClassifier.boosters_", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"fullname": "genbooster.genboosterclassifier.BoosterClassifier.fit", "modulename": "genbooster.genboosterclassifier", "qualname": "BoosterClassifier.fit", "kind": "function", "doc": "<p>Fit the booster model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n\ny: Target data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>self: The fitted boosting model.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genbooster</span><span class=\"o\">.</span><span class=\"n\">genboosterclassifier</span><span class=\"o\">.</span><span class=\"n\">BoosterClassifier</span>:</span></span>", "funcdef": "def"}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"fullname": "genbooster.genboosterclassifier.BoosterClassifier.predict", "modulename": "genbooster.genboosterclassifier", "qualname": "BoosterClassifier.predict", "kind": "function", "doc": "<p>Make predictions with the boosting model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>preds: Class predictions.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"fullname": "genbooster.genboosterclassifier.BoosterClassifier.predict_proba", "modulename": "genbooster.genboosterclassifier", "qualname": "BoosterClassifier.predict_proba", "kind": "function", "doc": "<p>Make probability predictions with the boosting model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>preds: Probability predictions.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"fullname": "genbooster.genboosterclassifier.BoosterClassifier.set_score_request", "modulename": "genbooster.genboosterclassifier", "qualname": "BoosterClassifier.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    The name of the method for which the request function should be\n    created, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</p>\n\n<p>keys : list of str\n    A list of strings which are accepted parameters by the created\n    function, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\n    accepts it as a metadata.</p>\n\n<p>validate_keys : bool, default=True\n    Whether to check if the requested parameters fit the actual parameters\n    of the method.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h2 id=\"references\">References</h2>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "genbooster.genboosterregressor": {"fullname": "genbooster.genboosterregressor", "modulename": "genbooster.genboosterregressor", "kind": "module", "doc": "<p></p>\n"}, "genbooster.genboosterregressor.BoosterRegressor": {"fullname": "genbooster.genboosterregressor.BoosterRegressor", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor", "kind": "class", "doc": "<p>Generic Gradient Boosting Regressor (for any base learner).</p>\n\n<p>Parameters:</p>\n\n<pre><code>base_estimator: Base learner to use for the booster.\n\nn_estimators: Number of boosting stages to perform.\n\nlearning_rate: Learning rate shrinks the contribution of each estimator.\n\nn_hidden_features: Number of hidden features to use for the base learner.\n\ndirect_link: Whether to use direct link for the base learner or not.\n\nweights_distribution: Distribution of the weights for the booster (uniform or normal).\n\ndropout: Dropout rate.\n\nrandom_state: Random state.\n</code></pre>\n\n<p>Attributes:</p>\n\n<pre><code>base_estimator_: The base learner.\n\nbooster_: The boosting model.\n\ny_mean_: Mean of the target variable.\n</code></pre>\n\n<p>Examples:</p>\n\n<pre><code>See https://github.com/Techtonique/genbooster/tree/main/examples\n</code></pre>\n", "bases": "sklearn.base.BaseEstimator, sklearn.base.RegressorMixin"}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"fullname": "genbooster.genboosterregressor.BoosterRegressor.__init__", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">sklearn</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">BaseEstimator</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">n_hidden_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">direct_link</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">weights_distribution</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;uniform&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dropout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">42</span></span>)</span>"}, "genbooster.genboosterregressor.BoosterRegressor.base_estimator": {"fullname": "genbooster.genboosterregressor.BoosterRegressor.base_estimator", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor.base_estimator", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterregressor.BoosterRegressor.n_estimators": {"fullname": "genbooster.genboosterregressor.BoosterRegressor.n_estimators", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor.n_estimators", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterregressor.BoosterRegressor.learning_rate": {"fullname": "genbooster.genboosterregressor.BoosterRegressor.learning_rate", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterregressor.BoosterRegressor.n_hidden_features": {"fullname": "genbooster.genboosterregressor.BoosterRegressor.n_hidden_features", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor.n_hidden_features", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterregressor.BoosterRegressor.direct_link": {"fullname": "genbooster.genboosterregressor.BoosterRegressor.direct_link", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor.direct_link", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterregressor.BoosterRegressor.weights_distribution": {"fullname": "genbooster.genboosterregressor.BoosterRegressor.weights_distribution", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor.weights_distribution", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterregressor.BoosterRegressor.dropout": {"fullname": "genbooster.genboosterregressor.BoosterRegressor.dropout", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor.dropout", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterregressor.BoosterRegressor.random_state": {"fullname": "genbooster.genboosterregressor.BoosterRegressor.random_state", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor.random_state", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterregressor.BoosterRegressor.scaler_": {"fullname": "genbooster.genboosterregressor.BoosterRegressor.scaler_", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor.scaler_", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterregressor.BoosterRegressor.y_mean_": {"fullname": "genbooster.genboosterregressor.BoosterRegressor.y_mean_", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor.y_mean_", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"fullname": "genbooster.genboosterregressor.BoosterRegressor.fit", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor.fit", "kind": "function", "doc": "<p>Fit the boosting model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n\ny: Target data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>self: The fitted boosting model.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genbooster</span><span class=\"o\">.</span><span class=\"n\">genboosterregressor</span><span class=\"o\">.</span><span class=\"n\">BoosterRegressor</span>:</span></span>", "funcdef": "def"}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"fullname": "genbooster.genboosterregressor.BoosterRegressor.predict", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor.predict", "kind": "function", "doc": "<p>Make predictions with the boosting model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>preds: Predictions.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"fullname": "genbooster.genboosterregressor.BoosterRegressor.set_score_request", "modulename": "genbooster.genboosterregressor", "qualname": "BoosterRegressor.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    The name of the method for which the request function should be\n    created, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</p>\n\n<p>keys : list of str\n    A list of strings which are accepted parameters by the created\n    function, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\n    accepts it as a metadata.</p>\n\n<p>validate_keys : bool, default=True\n    Whether to check if the requested parameters fit the actual parameters\n    of the method.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h2 id=\"references\">References</h2>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "genbooster.randombagclassifier": {"fullname": "genbooster.randombagclassifier", "modulename": "genbooster.randombagclassifier", "kind": "module", "doc": "<p></p>\n"}, "genbooster.randombagclassifier.RandomBagClassifier": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier", "kind": "class", "doc": "<p>Generic Random Bagging Classifier (for any base learner).</p>\n\n<p>Parameters:</p>\n\n<pre><code>base_estimator: Base learner to use for the booster.\n\nn_estimators: Number of boosting stages to perform.\n\nlearning_rate: Learning rate shrinks the contribution of each estimator.\n\nn_hidden_features: Number of hidden features to use for the base learner.\n\ndirect_link: Whether to use direct link for the base learner or not.\n\nweights_distribution: Distribution of the weights for the booster (uniform or normal).\n\ndropout: Dropout rate.\n\nrandom_state: Random state.\n</code></pre>\n\n<p>Attributes:</p>\n\n<pre><code>baggers_: The bagging learners.\n\nclasses_: The classes of the target variable.\n\nn_classes_: The number of classes of the target variable.\n</code></pre>\n\n<p>Examples:</p>\n\n<pre><code>See https://github.com/Techtonique/genbooster/tree/main/examples\n</code></pre>\n", "bases": "sklearn.base.BaseEstimator, sklearn.base.ClassifierMixin"}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier.__init__", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">sklearn</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">BaseEstimator</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">n_hidden_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">direct_link</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">weights_distribution</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;uniform&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dropout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">42</span></span>)</span>"}, "genbooster.randombagclassifier.RandomBagClassifier.n_estimators": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier.n_estimators", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier.n_estimators", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagclassifier.RandomBagClassifier.learning_rate": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier.learning_rate", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagclassifier.RandomBagClassifier.n_hidden_features": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier.n_hidden_features", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier.n_hidden_features", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagclassifier.RandomBagClassifier.direct_link": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier.direct_link", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier.direct_link", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagclassifier.RandomBagClassifier.weights_distribution": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier.weights_distribution", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier.weights_distribution", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagclassifier.RandomBagClassifier.dropout": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier.dropout", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier.dropout", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagclassifier.RandomBagClassifier.random_state": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier.random_state", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier.random_state", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagclassifier.RandomBagClassifier.y_mean_": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier.y_mean_", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier.y_mean_", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagclassifier.RandomBagClassifier.boosters_": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier.boosters_", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier.boosters_", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier.fit", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier.fit", "kind": "function", "doc": "<p>Fit the bagging model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n\ny: Target data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>self: The fitted bagging model.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genbooster</span><span class=\"o\">.</span><span class=\"n\">randombagclassifier</span><span class=\"o\">.</span><span class=\"n\">RandomBagClassifier</span>:</span></span>", "funcdef": "def"}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier.predict", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier.predict", "kind": "function", "doc": "<p>Make predictions with the bagging model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>preds: Class predictions.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier.predict_proba", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier.predict_proba", "kind": "function", "doc": "<p>Make probability predictions with the booster model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>preds: Probability predictions.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"fullname": "genbooster.randombagclassifier.RandomBagClassifier.set_score_request", "modulename": "genbooster.randombagclassifier", "qualname": "RandomBagClassifier.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    The name of the method for which the request function should be\n    created, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</p>\n\n<p>keys : list of str\n    A list of strings which are accepted parameters by the created\n    function, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\n    accepts it as a metadata.</p>\n\n<p>validate_keys : bool, default=True\n    Whether to check if the requested parameters fit the actual parameters\n    of the method.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h2 id=\"references\">References</h2>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "genbooster.randombagregressor": {"fullname": "genbooster.randombagregressor", "modulename": "genbooster.randombagregressor", "kind": "module", "doc": "<p></p>\n"}, "genbooster.randombagregressor.RandomBagRegressor": {"fullname": "genbooster.randombagregressor.RandomBagRegressor", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor", "kind": "class", "doc": "<p>Generic Random Bagging Regressor (for any base learner).</p>\n\n<p>Parameters:</p>\n\n<pre><code>base_estimator: Base learner to use for the booster.\n\nn_estimators: Number of boosting stages to perform.\n\nlearning_rate: Learning rate shrinks the contribution of each estimator.\n\nn_hidden_features: Number of hidden features to use for the base learner.\n\ndirect_link: Whether to use direct link for the base learner or not.\n\nweights_distribution: Distribution of the weights for the booster (uniform or normal).\n\ndropout: Dropout rate.\n\nrandom_state: Random state.\n</code></pre>\n\n<p>Attributes:</p>\n\n<pre><code>baggers_: The bagging learners.\n\ny_mean_: The mean of the target variable.\n</code></pre>\n\n<p>Examples:</p>\n\n<pre><code>See https://github.com/Techtonique/genbooster/tree/main/examples\n</code></pre>\n", "bases": "sklearn.base.BaseEstimator, sklearn.base.RegressorMixin"}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"fullname": "genbooster.randombagregressor.RandomBagRegressor.__init__", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">base_estimator</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">sklearn</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">BaseEstimator</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_estimators</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">n_hidden_features</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">direct_link</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">weights_distribution</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;uniform&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dropout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">42</span></span>)</span>"}, "genbooster.randombagregressor.RandomBagRegressor.base_estimator": {"fullname": "genbooster.randombagregressor.RandomBagRegressor.base_estimator", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor.base_estimator", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagregressor.RandomBagRegressor.n_estimators": {"fullname": "genbooster.randombagregressor.RandomBagRegressor.n_estimators", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor.n_estimators", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagregressor.RandomBagRegressor.learning_rate": {"fullname": "genbooster.randombagregressor.RandomBagRegressor.learning_rate", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor.learning_rate", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagregressor.RandomBagRegressor.n_hidden_features": {"fullname": "genbooster.randombagregressor.RandomBagRegressor.n_hidden_features", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor.n_hidden_features", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagregressor.RandomBagRegressor.direct_link": {"fullname": "genbooster.randombagregressor.RandomBagRegressor.direct_link", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor.direct_link", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagregressor.RandomBagRegressor.weights_distribution": {"fullname": "genbooster.randombagregressor.RandomBagRegressor.weights_distribution", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor.weights_distribution", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagregressor.RandomBagRegressor.dropout": {"fullname": "genbooster.randombagregressor.RandomBagRegressor.dropout", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor.dropout", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagregressor.RandomBagRegressor.random_state": {"fullname": "genbooster.randombagregressor.RandomBagRegressor.random_state", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor.random_state", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagregressor.RandomBagRegressor.scaler_": {"fullname": "genbooster.randombagregressor.RandomBagRegressor.scaler_", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor.scaler_", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagregressor.RandomBagRegressor.y_mean_": {"fullname": "genbooster.randombagregressor.RandomBagRegressor.y_mean_", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor.y_mean_", "kind": "variable", "doc": "<p></p>\n"}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"fullname": "genbooster.randombagregressor.RandomBagRegressor.fit", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor.fit", "kind": "function", "doc": "<p>Fit the bagging model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n\ny: Target data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>self: The fitted booster model.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">) -> <span class=\"n\">genbooster</span><span class=\"o\">.</span><span class=\"n\">randombagregressor</span><span class=\"o\">.</span><span class=\"n\">RandomBagRegressor</span>:</span></span>", "funcdef": "def"}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"fullname": "genbooster.randombagregressor.RandomBagRegressor.predict", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor.predict", "kind": "function", "doc": "<p>Make predictions with the bagging model.</p>\n\n<p>Parameters:</p>\n\n<pre><code>X: Input data.\n</code></pre>\n\n<p>Returns:</p>\n\n<pre><code>preds: Predictions.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">X</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"fullname": "genbooster.randombagregressor.RandomBagRegressor.set_score_request", "modulename": "genbooster.randombagregressor", "qualname": "RandomBagRegressor.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>name : str\n    The name of the method for which the request function should be\n    created, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</p>\n\n<p>keys : list of str\n    A list of strings which are accepted parameters by the created\n    function, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\n    accepts it as a metadata.</p>\n\n<p>validate_keys : bool, default=True\n    Whether to check if the requested parameters fit the actual parameters\n    of the method.</p>\n\n<h2 id=\"notes\">Notes</h2>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h2 id=\"references\">References</h2>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"genbooster": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterRegressor": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 129}, "genbooster.BoosterRegressor.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 3}, "genbooster.BoosterRegressor.base_estimator": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterRegressor.n_estimators": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterRegressor.learning_rate": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterRegressor.n_hidden_features": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterRegressor.direct_link": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterRegressor.weights_distribution": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterRegressor.dropout": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterRegressor.random_state": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterRegressor.scaler_": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterRegressor.y_mean_": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterRegressor.fit": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 34}, "genbooster.BoosterRegressor.predict": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 30}, "genbooster.BoosterRegressor.set_score_request": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 198}, "genbooster.BoosterClassifier": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 133}, "genbooster.BoosterClassifier.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 3}, "genbooster.BoosterClassifier.n_estimators": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterClassifier.learning_rate": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterClassifier.n_hidden_features": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterClassifier.direct_link": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterClassifier.weights_distribution": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterClassifier.dropout": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterClassifier.random_state": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterClassifier.boosters_": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.BoosterClassifier.fit": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 34}, "genbooster.BoosterClassifier.predict": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 31}, "genbooster.BoosterClassifier.predict_proba": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 32}, "genbooster.BoosterClassifier.set_score_request": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 198}, "genbooster.RandomBagRegressor": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 124}, "genbooster.RandomBagRegressor.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 3}, "genbooster.RandomBagRegressor.base_estimator": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagRegressor.n_estimators": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagRegressor.learning_rate": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagRegressor.n_hidden_features": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagRegressor.direct_link": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagRegressor.weights_distribution": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagRegressor.dropout": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagRegressor.random_state": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagRegressor.scaler_": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagRegressor.y_mean_": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagRegressor.fit": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 34}, "genbooster.RandomBagRegressor.predict": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 30}, "genbooster.RandomBagRegressor.set_score_request": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 198}, "genbooster.RandomBagClassifier": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 134}, "genbooster.RandomBagClassifier.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 3}, "genbooster.RandomBagClassifier.n_estimators": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagClassifier.learning_rate": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagClassifier.n_hidden_features": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagClassifier.direct_link": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagClassifier.weights_distribution": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagClassifier.dropout": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagClassifier.random_state": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagClassifier.y_mean_": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagClassifier.boosters_": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RandomBagClassifier.fit": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 34}, "genbooster.RandomBagClassifier.predict": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 31}, "genbooster.RandomBagClassifier.predict_proba": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 32}, "genbooster.RandomBagClassifier.set_score_request": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 198}, "genbooster.RustBooster": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.RustBooster.fit_boosting": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "genbooster.RustBooster.predict_boosting": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "genbooster.RustBooster.fit_bagging": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "genbooster.RustBooster.predict_bagging": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "genbooster.genboosterclassifier": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterclassifier.BoosterClassifier": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 133}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 3}, "genbooster.genboosterclassifier.BoosterClassifier.n_estimators": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterclassifier.BoosterClassifier.learning_rate": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterclassifier.BoosterClassifier.n_hidden_features": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterclassifier.BoosterClassifier.direct_link": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterclassifier.BoosterClassifier.weights_distribution": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterclassifier.BoosterClassifier.dropout": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterclassifier.BoosterClassifier.random_state": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterclassifier.BoosterClassifier.boosters_": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 34}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 31}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 32}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 198}, "genbooster.genboosterregressor": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterregressor.BoosterRegressor": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 129}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 3}, "genbooster.genboosterregressor.BoosterRegressor.base_estimator": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterregressor.BoosterRegressor.n_estimators": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterregressor.BoosterRegressor.learning_rate": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterregressor.BoosterRegressor.n_hidden_features": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterregressor.BoosterRegressor.direct_link": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterregressor.BoosterRegressor.weights_distribution": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterregressor.BoosterRegressor.dropout": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterregressor.BoosterRegressor.random_state": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterregressor.BoosterRegressor.scaler_": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterregressor.BoosterRegressor.y_mean_": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 34}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 30}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 198}, "genbooster.randombagclassifier": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagclassifier.RandomBagClassifier": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 134}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 3}, "genbooster.randombagclassifier.RandomBagClassifier.n_estimators": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagclassifier.RandomBagClassifier.learning_rate": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagclassifier.RandomBagClassifier.n_hidden_features": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagclassifier.RandomBagClassifier.direct_link": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagclassifier.RandomBagClassifier.weights_distribution": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagclassifier.RandomBagClassifier.dropout": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagclassifier.RandomBagClassifier.random_state": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagclassifier.RandomBagClassifier.y_mean_": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagclassifier.RandomBagClassifier.boosters_": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 34}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 31}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 32}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 198}, "genbooster.randombagregressor": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagregressor.RandomBagRegressor": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 124}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 184, "bases": 0, "doc": 3}, "genbooster.randombagregressor.RandomBagRegressor.base_estimator": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagregressor.RandomBagRegressor.n_estimators": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagregressor.RandomBagRegressor.learning_rate": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagregressor.RandomBagRegressor.n_hidden_features": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagregressor.RandomBagRegressor.direct_link": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagregressor.RandomBagRegressor.weights_distribution": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagregressor.RandomBagRegressor.dropout": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagregressor.RandomBagRegressor.random_state": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagregressor.RandomBagRegressor.scaler_": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagregressor.RandomBagRegressor.y_mean_": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 34}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 30}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 198}}, "length": 128, "save": true}, "index": {"qualname": {"root": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.scaler_": {"tf": 1}, "genbooster.RandomBagRegressor.y_mean_": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.RandomBagClassifier.boosters_": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.boosters_": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.scaler_": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.y_mean_": {"tf": 1}}, "df": 22, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.BoosterRegressor.dropout": {"tf": 1}, "genbooster.BoosterRegressor.random_state": {"tf": 1}, "genbooster.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.dropout": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.random_state": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}}, "df": 30}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterClassifier": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.BoosterClassifier.dropout": {"tf": 1}, "genbooster.BoosterClassifier.random_state": {"tf": 1}, "genbooster.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.dropout": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.random_state": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}}, "df": 28}}}}}}}}}}, "s": {"docs": {"genbooster.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.RandomBagClassifier.boosters_": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.boosters_": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"genbooster.RustBooster.fit_boosting": {"tf": 1}, "genbooster.RustBooster.predict_boosting": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.RandomBagRegressor.base_estimator": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.base_estimator": {"tf": 1}}, "df": 4}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"genbooster.RustBooster.fit_bagging": {"tf": 1}, "genbooster.RustBooster.predict_bagging": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.RandomBagRegressor.base_estimator": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.base_estimator": {"tf": 1}}, "df": 4, "s": {"docs": {"genbooster.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.RandomBagRegressor.n_estimators": {"tf": 1}, "genbooster.RandomBagClassifier.n_estimators": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.n_estimators": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.n_estimators": {"tf": 1}}, "df": 8}}}}}}}}}}, "n": {"docs": {"genbooster.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.RandomBagRegressor.n_estimators": {"tf": 1}, "genbooster.RandomBagRegressor.n_hidden_features": {"tf": 1}, "genbooster.RandomBagClassifier.n_estimators": {"tf": 1}, "genbooster.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.n_estimators": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.n_estimators": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.n_hidden_features": {"tf": 1}}, "df": 16}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"genbooster.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.RandomBagRegressor.learning_rate": {"tf": 1}, "genbooster.RandomBagClassifier.learning_rate": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.learning_rate": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.learning_rate": {"tf": 1}}, "df": 8}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"genbooster.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.RandomBagRegressor.direct_link": {"tf": 1}, "genbooster.RandomBagClassifier.direct_link": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.direct_link": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.direct_link": {"tf": 1}}, "df": 8}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.RandomBagRegressor.learning_rate": {"tf": 1}, "genbooster.RandomBagClassifier.learning_rate": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.learning_rate": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.learning_rate": {"tf": 1}}, "df": 8}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"genbooster.BoosterRegressor.random_state": {"tf": 1}, "genbooster.BoosterClassifier.random_state": {"tf": 1}, "genbooster.RandomBagRegressor.random_state": {"tf": 1}, "genbooster.RandomBagClassifier.random_state": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.random_state": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.random_state": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.random_state": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.random_state": {"tf": 1}}, "df": 8, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.base_estimator": {"tf": 1}, "genbooster.RandomBagRegressor.n_estimators": {"tf": 1}, "genbooster.RandomBagRegressor.learning_rate": {"tf": 1}, "genbooster.RandomBagRegressor.n_hidden_features": {"tf": 1}, "genbooster.RandomBagRegressor.direct_link": {"tf": 1}, "genbooster.RandomBagRegressor.weights_distribution": {"tf": 1}, "genbooster.RandomBagRegressor.dropout": {"tf": 1}, "genbooster.RandomBagRegressor.random_state": {"tf": 1}, "genbooster.RandomBagRegressor.scaler_": {"tf": 1}, "genbooster.RandomBagRegressor.y_mean_": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.base_estimator": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.n_estimators": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.learning_rate": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.n_hidden_features": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.direct_link": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.weights_distribution": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.dropout": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.random_state": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.scaler_": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.y_mean_": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 30}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.n_estimators": {"tf": 1}, "genbooster.RandomBagClassifier.learning_rate": {"tf": 1}, "genbooster.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.RandomBagClassifier.direct_link": {"tf": 1}, "genbooster.RandomBagClassifier.weights_distribution": {"tf": 1}, "genbooster.RandomBagClassifier.dropout": {"tf": 1}, "genbooster.RandomBagClassifier.random_state": {"tf": 1}, "genbooster.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.RandomBagClassifier.boosters_": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.n_estimators": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.learning_rate": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.direct_link": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.weights_distribution": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.dropout": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.random_state": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.boosters_": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}}, "df": 30}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.RustBooster": {"tf": 1}, "genbooster.RustBooster.fit_boosting": {"tf": 1}, "genbooster.RustBooster.predict_boosting": {"tf": 1}, "genbooster.RustBooster.fit_bagging": {"tf": 1}, "genbooster.RustBooster.predict_bagging": {"tf": 1}}, "df": 5}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.RandomBagRegressor.n_hidden_features": {"tf": 1}, "genbooster.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.n_hidden_features": {"tf": 1}}, "df": 8}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.RandomBagRegressor.n_hidden_features": {"tf": 1}, "genbooster.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.n_hidden_features": {"tf": 1}}, "df": 8}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.RustBooster.fit_boosting": {"tf": 1}, "genbooster.RustBooster.fit_bagging": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}}, "df": 10}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.RandomBagRegressor.direct_link": {"tf": 1}, "genbooster.RandomBagClassifier.direct_link": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.direct_link": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.direct_link": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.RandomBagRegressor.weights_distribution": {"tf": 1}, "genbooster.RandomBagClassifier.weights_distribution": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.weights_distribution": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.weights_distribution": {"tf": 1}}, "df": 8}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.dropout": {"tf": 1}, "genbooster.BoosterClassifier.dropout": {"tf": 1}, "genbooster.RandomBagRegressor.dropout": {"tf": 1}, "genbooster.RandomBagClassifier.dropout": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.dropout": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.dropout": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.dropout": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.dropout": {"tf": 1}}, "df": 8}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.RandomBagRegressor.weights_distribution": {"tf": 1}, "genbooster.RandomBagClassifier.weights_distribution": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.weights_distribution": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.weights_distribution": {"tf": 1}}, "df": 8}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.random_state": {"tf": 1}, "genbooster.BoosterClassifier.random_state": {"tf": 1}, "genbooster.RandomBagRegressor.random_state": {"tf": 1}, "genbooster.RandomBagClassifier.random_state": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.random_state": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.random_state": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.random_state": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.random_state": {"tf": 1}}, "df": 8}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.RandomBagRegressor.scaler_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.scaler_": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}, "y": {"docs": {"genbooster.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.RandomBagRegressor.y_mean_": {"tf": 1}, "genbooster.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.y_mean_": {"tf": 1}}, "df": 6}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.RandomBagRegressor.y_mean_": {"tf": 1}, "genbooster.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.y_mean_": {"tf": 1}}, "df": 6}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.RustBooster.predict_boosting": {"tf": 1}, "genbooster.RustBooster.predict_bagging": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 14}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}}, "df": 4}}}}}}}, "fullname": {"root": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.scaler_": {"tf": 1}, "genbooster.RandomBagRegressor.y_mean_": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.RandomBagClassifier.boosters_": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.boosters_": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.scaler_": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.y_mean_": {"tf": 1}}, "df": 22, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster": {"tf": 1}, "genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.BoosterRegressor.dropout": {"tf": 1}, "genbooster.BoosterRegressor.random_state": {"tf": 1}, "genbooster.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.BoosterClassifier.dropout": {"tf": 1}, "genbooster.BoosterClassifier.random_state": {"tf": 1}, "genbooster.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.base_estimator": {"tf": 1}, "genbooster.RandomBagRegressor.n_estimators": {"tf": 1}, "genbooster.RandomBagRegressor.learning_rate": {"tf": 1}, "genbooster.RandomBagRegressor.n_hidden_features": {"tf": 1}, "genbooster.RandomBagRegressor.direct_link": {"tf": 1}, "genbooster.RandomBagRegressor.weights_distribution": {"tf": 1}, "genbooster.RandomBagRegressor.dropout": {"tf": 1}, "genbooster.RandomBagRegressor.random_state": {"tf": 1}, "genbooster.RandomBagRegressor.scaler_": {"tf": 1}, "genbooster.RandomBagRegressor.y_mean_": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.n_estimators": {"tf": 1}, "genbooster.RandomBagClassifier.learning_rate": {"tf": 1}, "genbooster.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.RandomBagClassifier.direct_link": {"tf": 1}, "genbooster.RandomBagClassifier.weights_distribution": {"tf": 1}, "genbooster.RandomBagClassifier.dropout": {"tf": 1}, "genbooster.RandomBagClassifier.random_state": {"tf": 1}, "genbooster.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.RandomBagClassifier.boosters_": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.RustBooster": {"tf": 1}, "genbooster.RustBooster.fit_boosting": {"tf": 1}, "genbooster.RustBooster.predict_boosting": {"tf": 1}, "genbooster.RustBooster.fit_bagging": {"tf": 1}, "genbooster.RustBooster.predict_bagging": {"tf": 1}, "genbooster.genboosterclassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.dropout": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.random_state": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.dropout": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.random_state": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.n_estimators": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.learning_rate": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.direct_link": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.weights_distribution": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.dropout": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.random_state": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.boosters_": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.base_estimator": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.n_estimators": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.learning_rate": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.n_hidden_features": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.direct_link": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.weights_distribution": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.dropout": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.random_state": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.scaler_": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.y_mean_": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 128, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.genboosterclassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.dropout": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.random_state": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}}, "df": 15}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.genboosterregressor": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.dropout": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.random_state": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}}, "df": 16}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.BoosterRegressor.dropout": {"tf": 1}, "genbooster.BoosterRegressor.random_state": {"tf": 1}, "genbooster.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.dropout": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.random_state": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}}, "df": 30}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterClassifier": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.BoosterClassifier.dropout": {"tf": 1}, "genbooster.BoosterClassifier.random_state": {"tf": 1}, "genbooster.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.dropout": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.random_state": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}}, "df": 28}}}}}}}}}}, "s": {"docs": {"genbooster.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.RandomBagClassifier.boosters_": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.boosters_": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.boosters_": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"genbooster.RustBooster.fit_boosting": {"tf": 1}, "genbooster.RustBooster.predict_boosting": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.RandomBagRegressor.base_estimator": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.base_estimator": {"tf": 1}}, "df": 4}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"genbooster.RustBooster.fit_bagging": {"tf": 1}, "genbooster.RustBooster.predict_bagging": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.RandomBagRegressor.base_estimator": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.base_estimator": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.base_estimator": {"tf": 1}}, "df": 4, "s": {"docs": {"genbooster.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.RandomBagRegressor.n_estimators": {"tf": 1}, "genbooster.RandomBagClassifier.n_estimators": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.n_estimators": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.n_estimators": {"tf": 1}}, "df": 8}}}}}}}}}}, "n": {"docs": {"genbooster.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.RandomBagRegressor.n_estimators": {"tf": 1}, "genbooster.RandomBagRegressor.n_hidden_features": {"tf": 1}, "genbooster.RandomBagClassifier.n_estimators": {"tf": 1}, "genbooster.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_estimators": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_estimators": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.n_estimators": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.n_estimators": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.n_hidden_features": {"tf": 1}}, "df": 16}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"genbooster.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.RandomBagRegressor.learning_rate": {"tf": 1}, "genbooster.RandomBagClassifier.learning_rate": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.learning_rate": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.learning_rate": {"tf": 1}}, "df": 8}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"genbooster.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.RandomBagRegressor.direct_link": {"tf": 1}, "genbooster.RandomBagClassifier.direct_link": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.direct_link": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.direct_link": {"tf": 1}}, "df": 8}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.RandomBagRegressor.learning_rate": {"tf": 1}, "genbooster.RandomBagClassifier.learning_rate": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.learning_rate": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.learning_rate": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.learning_rate": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.learning_rate": {"tf": 1}}, "df": 8}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"genbooster.BoosterRegressor.random_state": {"tf": 1}, "genbooster.BoosterClassifier.random_state": {"tf": 1}, "genbooster.RandomBagRegressor.random_state": {"tf": 1}, "genbooster.RandomBagClassifier.random_state": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.random_state": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.random_state": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.random_state": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.random_state": {"tf": 1}}, "df": 8, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.base_estimator": {"tf": 1}, "genbooster.RandomBagRegressor.n_estimators": {"tf": 1}, "genbooster.RandomBagRegressor.learning_rate": {"tf": 1}, "genbooster.RandomBagRegressor.n_hidden_features": {"tf": 1}, "genbooster.RandomBagRegressor.direct_link": {"tf": 1}, "genbooster.RandomBagRegressor.weights_distribution": {"tf": 1}, "genbooster.RandomBagRegressor.dropout": {"tf": 1}, "genbooster.RandomBagRegressor.random_state": {"tf": 1}, "genbooster.RandomBagRegressor.scaler_": {"tf": 1}, "genbooster.RandomBagRegressor.y_mean_": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.randombagregressor": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.base_estimator": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.n_estimators": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.learning_rate": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.n_hidden_features": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.direct_link": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.weights_distribution": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.dropout": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.random_state": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.scaler_": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.y_mean_": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 31}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.n_estimators": {"tf": 1}, "genbooster.RandomBagClassifier.learning_rate": {"tf": 1}, "genbooster.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.RandomBagClassifier.direct_link": {"tf": 1}, "genbooster.RandomBagClassifier.weights_distribution": {"tf": 1}, "genbooster.RandomBagClassifier.dropout": {"tf": 1}, "genbooster.RandomBagClassifier.random_state": {"tf": 1}, "genbooster.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.RandomBagClassifier.boosters_": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagclassifier": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.n_estimators": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.learning_rate": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.n_hidden_features": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.direct_link": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.weights_distribution": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.dropout": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.random_state": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.y_mean_": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.boosters_": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}}, "df": 31}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.RustBooster": {"tf": 1}, "genbooster.RustBooster.fit_boosting": {"tf": 1}, "genbooster.RustBooster.predict_boosting": {"tf": 1}, "genbooster.RustBooster.fit_bagging": {"tf": 1}, "genbooster.RustBooster.predict_bagging": {"tf": 1}}, "df": 5}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.RandomBagRegressor.n_hidden_features": {"tf": 1}, "genbooster.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.n_hidden_features": {"tf": 1}}, "df": 8}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.RandomBagRegressor.n_hidden_features": {"tf": 1}, "genbooster.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.n_hidden_features": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.n_hidden_features": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.n_hidden_features": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.n_hidden_features": {"tf": 1}}, "df": 8}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.RustBooster.fit_boosting": {"tf": 1}, "genbooster.RustBooster.fit_bagging": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}}, "df": 10}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.RandomBagRegressor.direct_link": {"tf": 1}, "genbooster.RandomBagClassifier.direct_link": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.direct_link": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.direct_link": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.direct_link": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.direct_link": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.RandomBagRegressor.weights_distribution": {"tf": 1}, "genbooster.RandomBagClassifier.weights_distribution": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.weights_distribution": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.weights_distribution": {"tf": 1}}, "df": 8}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.dropout": {"tf": 1}, "genbooster.BoosterClassifier.dropout": {"tf": 1}, "genbooster.RandomBagRegressor.dropout": {"tf": 1}, "genbooster.RandomBagClassifier.dropout": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.dropout": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.dropout": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.dropout": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.dropout": {"tf": 1}}, "df": 8}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.RandomBagRegressor.weights_distribution": {"tf": 1}, "genbooster.RandomBagClassifier.weights_distribution": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.weights_distribution": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.weights_distribution": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.weights_distribution": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.weights_distribution": {"tf": 1}}, "df": 8}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.random_state": {"tf": 1}, "genbooster.BoosterClassifier.random_state": {"tf": 1}, "genbooster.RandomBagRegressor.random_state": {"tf": 1}, "genbooster.RandomBagClassifier.random_state": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.random_state": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.random_state": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.random_state": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.random_state": {"tf": 1}}, "df": 8}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.RandomBagRegressor.scaler_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.scaler_": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.scaler_": {"tf": 1}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}, "y": {"docs": {"genbooster.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.RandomBagRegressor.y_mean_": {"tf": 1}, "genbooster.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.y_mean_": {"tf": 1}}, "df": 6}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.RandomBagRegressor.y_mean_": {"tf": 1}, "genbooster.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.y_mean_": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.y_mean_": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.y_mean_": {"tf": 1}}, "df": 6}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.RustBooster.predict_boosting": {"tf": 1}, "genbooster.RustBooster.predict_bagging": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 14}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {"genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}}, "df": 4}}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"0": {"1": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}, "docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier.__init__": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.__init__": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.__init__": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1.7320508075688772}}, "df": 8}, "1": {"0": {"0": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"9": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 8}, "docs": {}, "df": 0}, "4": {"2": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}, "docs": {}, "df": 0}, "5": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}, "docs": {"genbooster.BoosterRegressor.__init__": {"tf": 12}, "genbooster.BoosterRegressor.fit": {"tf": 5.291502622129181}, "genbooster.BoosterRegressor.predict": {"tf": 4.47213595499958}, "genbooster.BoosterRegressor.set_score_request": {"tf": 3.1622776601683795}, "genbooster.BoosterClassifier.__init__": {"tf": 12}, "genbooster.BoosterClassifier.fit": {"tf": 5.291502622129181}, "genbooster.BoosterClassifier.predict": {"tf": 4.47213595499958}, "genbooster.BoosterClassifier.predict_proba": {"tf": 4.47213595499958}, "genbooster.BoosterClassifier.set_score_request": {"tf": 3.1622776601683795}, "genbooster.RandomBagRegressor.__init__": {"tf": 12}, "genbooster.RandomBagRegressor.fit": {"tf": 5.291502622129181}, "genbooster.RandomBagRegressor.predict": {"tf": 4.47213595499958}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 3.1622776601683795}, "genbooster.RandomBagClassifier.__init__": {"tf": 12}, "genbooster.RandomBagClassifier.fit": {"tf": 5.291502622129181}, "genbooster.RandomBagClassifier.predict": {"tf": 4.47213595499958}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 4.47213595499958}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 3.1622776601683795}, "genbooster.RustBooster.fit_boosting": {"tf": 5.5677643628300215}, "genbooster.RustBooster.predict_boosting": {"tf": 4.358898943540674}, "genbooster.RustBooster.fit_bagging": {"tf": 5.5677643628300215}, "genbooster.RustBooster.predict_bagging": {"tf": 4.358898943540674}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 12}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 5.291502622129181}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 4.47213595499958}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 4.47213595499958}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 3.1622776601683795}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 12}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 5.291502622129181}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 4.47213595499958}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 3.1622776601683795}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 12}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 5.291502622129181}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 4.47213595499958}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 4.47213595499958}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 3.1622776601683795}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 12}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 5.291502622129181}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 4.47213595499958}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 3.1622776601683795}}, "df": 40, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8, "s": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.RustBooster.fit_boosting": {"tf": 1}, "genbooster.RustBooster.predict_boosting": {"tf": 1}, "genbooster.RustBooster.fit_bagging": {"tf": 1}, "genbooster.RustBooster.predict_bagging": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 24}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"genbooster.RustBooster.fit_boosting": {"tf": 1}, "genbooster.RustBooster.fit_bagging": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 8, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 12}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 12}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier.__init__": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.__init__": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.__init__": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1.7320508075688772}}, "df": 8}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.RandomBagRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.RandomBagClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1.4142135623730951}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.RustBooster.fit_boosting": {"tf": 1}, "genbooster.RustBooster.fit_bagging": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 10}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"genbooster.BoosterRegressor.__init__": {"tf": 1}, "genbooster.BoosterClassifier.__init__": {"tf": 1}, "genbooster.RandomBagRegressor.__init__": {"tf": 1}, "genbooster.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1}}, "df": 8}}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}}, "x": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.RustBooster.fit_boosting": {"tf": 1}, "genbooster.RustBooster.predict_boosting": {"tf": 1}, "genbooster.RustBooster.fit_bagging": {"tf": 1}, "genbooster.RustBooster.predict_bagging": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 24}, "y": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.RustBooster.fit_boosting": {"tf": 1}, "genbooster.RustBooster.fit_bagging": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}}, "df": 10}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}}, "df": 8, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "doc": {"root": {"0": {"3": {"6": {"2": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"6": {"0": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8}, "docs": {}, "df": 0}, "docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8}, "2": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}, "3": {"6": {"2": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}, "docs": {}, "df": 0}, "docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}, "8": {"6": {"1": {"7": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"genbooster": {"tf": 1.7320508075688772}, "genbooster.BoosterRegressor": {"tf": 5.196152422706632}, "genbooster.BoosterRegressor.__init__": {"tf": 1.7320508075688772}, "genbooster.BoosterRegressor.base_estimator": {"tf": 1.7320508075688772}, "genbooster.BoosterRegressor.n_estimators": {"tf": 1.7320508075688772}, "genbooster.BoosterRegressor.learning_rate": {"tf": 1.7320508075688772}, "genbooster.BoosterRegressor.n_hidden_features": {"tf": 1.7320508075688772}, "genbooster.BoosterRegressor.direct_link": {"tf": 1.7320508075688772}, "genbooster.BoosterRegressor.weights_distribution": {"tf": 1.7320508075688772}, "genbooster.BoosterRegressor.dropout": {"tf": 1.7320508075688772}, "genbooster.BoosterRegressor.random_state": {"tf": 1.7320508075688772}, "genbooster.BoosterRegressor.scaler_": {"tf": 1.7320508075688772}, "genbooster.BoosterRegressor.y_mean_": {"tf": 1.7320508075688772}, "genbooster.BoosterRegressor.fit": {"tf": 4.123105625617661}, "genbooster.BoosterRegressor.predict": {"tf": 4.123105625617661}, "genbooster.BoosterRegressor.set_score_request": {"tf": 9}, "genbooster.BoosterClassifier": {"tf": 5.196152422706632}, "genbooster.BoosterClassifier.__init__": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier.n_estimators": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier.learning_rate": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier.n_hidden_features": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier.direct_link": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier.weights_distribution": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier.dropout": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier.random_state": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier.boosters_": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier.fit": {"tf": 4.123105625617661}, "genbooster.BoosterClassifier.predict": {"tf": 4.123105625617661}, "genbooster.BoosterClassifier.predict_proba": {"tf": 4.123105625617661}, "genbooster.BoosterClassifier.set_score_request": {"tf": 9}, "genbooster.RandomBagRegressor": {"tf": 5.0990195135927845}, "genbooster.RandomBagRegressor.__init__": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.base_estimator": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.n_estimators": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.learning_rate": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.n_hidden_features": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.direct_link": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.weights_distribution": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.dropout": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.random_state": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.scaler_": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.y_mean_": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.fit": {"tf": 4.123105625617661}, "genbooster.RandomBagRegressor.predict": {"tf": 4.123105625617661}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 9}, "genbooster.RandomBagClassifier": {"tf": 5.196152422706632}, "genbooster.RandomBagClassifier.__init__": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.n_estimators": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.learning_rate": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.n_hidden_features": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.direct_link": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.weights_distribution": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.dropout": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.random_state": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.y_mean_": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.boosters_": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.fit": {"tf": 4.123105625617661}, "genbooster.RandomBagClassifier.predict": {"tf": 4.123105625617661}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 4.123105625617661}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 9}, "genbooster.RustBooster": {"tf": 1.7320508075688772}, "genbooster.RustBooster.fit_boosting": {"tf": 1.7320508075688772}, "genbooster.RustBooster.predict_boosting": {"tf": 1.7320508075688772}, "genbooster.RustBooster.fit_bagging": {"tf": 1.7320508075688772}, "genbooster.RustBooster.predict_bagging": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 5.196152422706632}, "genbooster.genboosterclassifier.BoosterClassifier.__init__": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier.n_estimators": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier.learning_rate": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier.n_hidden_features": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier.direct_link": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier.weights_distribution": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier.dropout": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier.random_state": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier.boosters_": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 4.123105625617661}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 4.123105625617661}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 4.123105625617661}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 9}, "genbooster.genboosterregressor": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 5.196152422706632}, "genbooster.genboosterregressor.BoosterRegressor.__init__": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.base_estimator": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.n_estimators": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.learning_rate": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.n_hidden_features": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.direct_link": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.weights_distribution": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.dropout": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.random_state": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.scaler_": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.y_mean_": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 4.123105625617661}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 4.123105625617661}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 9}, "genbooster.randombagclassifier": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 5.196152422706632}, "genbooster.randombagclassifier.RandomBagClassifier.__init__": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.n_estimators": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.learning_rate": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.n_hidden_features": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.direct_link": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.weights_distribution": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.dropout": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.random_state": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.y_mean_": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.boosters_": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 4.123105625617661}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 4.123105625617661}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 4.123105625617661}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 9}, "genbooster.randombagregressor": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 5.0990195135927845}, "genbooster.randombagregressor.RandomBagRegressor.__init__": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.base_estimator": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.n_estimators": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.learning_rate": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.n_hidden_features": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.direct_link": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.weights_distribution": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.dropout": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.random_state": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.scaler_": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.y_mean_": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 4.123105625617661}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 4.123105625617661}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 9}}, "df": 128, "g": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}}, "df": 4}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.7320508075688772}, "genbooster.BoosterRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 18}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}}, "df": 14, "s": {"docs": {"genbooster.BoosterClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor": {"tf": 2.6457513110645907}, "genbooster.BoosterClassifier": {"tf": 2.449489742783178}, "genbooster.RandomBagRegressor": {"tf": 2.23606797749979}, "genbooster.RandomBagClassifier": {"tf": 2.23606797749979}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 2.449489742783178}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 2.6457513110645907}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 2.23606797749979}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 2.23606797749979}}, "df": 8}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 12}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}, "y": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 20}, "e": {"docs": {}, "df": 0, "d": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.7320508075688772}}, "df": 8, "e": {"docs": {}, "df": 0, "d": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.7320508075688772}}, "df": 8}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.7320508075688772}}, "df": 8}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor": {"tf": 2.23606797749979}, "genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 2.23606797749979}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 2.23606797749979}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 2.23606797749979}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 2.23606797749979}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 2.23606797749979}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 2.23606797749979}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 2.23606797749979}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 16}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterRegressor.set_score_request": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.7320508075688772}}, "df": 16, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}}, "df": 8}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 2}, "genbooster.BoosterClassifier.set_score_request": {"tf": 2}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 2}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 2}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 2}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 2}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 2}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 2}}, "df": 8}}}}}}}}, "a": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 2.23606797749979}, "genbooster.BoosterClassifier.set_score_request": {"tf": 2.23606797749979}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 2.23606797749979}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 2.23606797749979}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 2.23606797749979}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 2.23606797749979}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 2.23606797749979}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 2.23606797749979}}, "df": 8, "n": {"docs": {}, "df": 0, "y": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}, "d": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}, "s": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}, "s": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor": {"tf": 2.23606797749979}, "genbooster.BoosterClassifier": {"tf": 2}, "genbooster.RandomBagRegressor": {"tf": 2}, "genbooster.RandomBagClassifier": {"tf": 2}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 2}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 2.23606797749979}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 2}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 2}}, "df": 8, "s": {"docs": {"genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterRegressor.set_score_request": {"tf": 2}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 2}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 2}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 2}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 2}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 2}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 2}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 2}}, "df": 36}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}}}, "p": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.predict": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.predict": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.predict": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.predict": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1.4142135623730951}}, "df": 12}}}}}}}, "s": {"docs": {"genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 12}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"genbooster.BoosterClassifier.predict_proba": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8}}}}}}, "e": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"genbooster.BoosterRegressor": {"tf": 2}, "genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 2}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 2}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 2}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 2}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 2}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 2}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 2}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 16}, "h": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor": {"tf": 3}, "genbooster.BoosterRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterRegressor.set_score_request": {"tf": 3.1622776601683795}, "genbooster.BoosterClassifier": {"tf": 3.1622776601683795}, "genbooster.BoosterClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 3.1622776601683795}, "genbooster.RandomBagRegressor": {"tf": 3}, "genbooster.RandomBagRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 3.1622776601683795}, "genbooster.RandomBagClassifier": {"tf": 3.3166247903554}, "genbooster.RandomBagClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 3.1622776601683795}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 3.1622776601683795}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 3.1622776601683795}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 3}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 3.1622776601683795}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 3.3166247903554}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 3.1622776601683795}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 3}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 3.1622776601683795}}, "df": 36}, "i": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}}, "df": 16}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}}}}}, "n": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"genbooster.BoosterRegressor": {"tf": 2.23606797749979}, "genbooster.BoosterRegressor.set_score_request": {"tf": 2.23606797749979}, "genbooster.BoosterClassifier": {"tf": 2.6457513110645907}, "genbooster.BoosterClassifier.set_score_request": {"tf": 2.23606797749979}, "genbooster.RandomBagRegressor": {"tf": 2.23606797749979}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 2.23606797749979}, "genbooster.RandomBagClassifier": {"tf": 2.6457513110645907}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 2.23606797749979}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 2.6457513110645907}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 2.23606797749979}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 2.23606797749979}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 2.23606797749979}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 2.6457513110645907}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 2.23606797749979}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 2.23606797749979}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 2.23606797749979}}, "df": 16}, "r": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8, "g": {"docs": {}, "df": 0, "/": {"3": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}, "docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8}}}, "r": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}, "l": {"docs": {}, "df": 0, "f": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}}, "df": 8}}, "t": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}}}}}}}}, "m": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8, "d": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 12, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterClassifier": {"tf": 2}, "genbooster.RandomBagClassifier": {"tf": 2}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 2}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 2}}, "df": 4}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}, "w": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 20}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 16}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8, "s": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 8}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 12}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 22}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1.4142135623730951}}, "df": 4}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.7320508075688772}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.7320508075688772}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.7320508075688772}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.7320508075688772}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.7320508075688772}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.7320508075688772}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.7320508075688772}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 12}}}}, "y": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}}, "df": 12}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor": {"tf": 1}, "genbooster.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor": {"tf": 1}, "genbooster.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor": {"tf": 1}}, "df": 8}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}}}}}}, "x": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 20}, "i": {"docs": {}, "df": 0, "n": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"genbooster.BoosterRegressor.fit": {"tf": 1}, "genbooster.BoosterRegressor.predict": {"tf": 1}, "genbooster.BoosterClassifier.fit": {"tf": 1}, "genbooster.BoosterClassifier.predict": {"tf": 1}, "genbooster.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.RandomBagRegressor.fit": {"tf": 1}, "genbooster.RandomBagRegressor.predict": {"tf": 1}, "genbooster.RandomBagClassifier.fit": {"tf": 1}, "genbooster.RandomBagClassifier.predict": {"tf": 1}, "genbooster.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.fit": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.predict_proba": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.fit": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.fit": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.predict_proba": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.fit": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.predict": {"tf": 1}}, "df": 20}}}}, "f": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8}, "t": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}, "s": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1}}, "df": 8}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"genbooster.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterclassifier.BoosterClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.genboosterregressor.BoosterRegressor.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagclassifier.RandomBagClassifier.set_score_request": {"tf": 1.4142135623730951}, "genbooster.randombagregressor.RandomBagRegressor.set_score_request": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();